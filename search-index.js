var searchIndex = {};
searchIndex['float_cmp'] = {"items":[[0,"","float_cmp","float-cmp defines traits for approximate comparison of floating point types which have fallen\naway from exact equality due to rounding and inaccuracies within the floating point unit of your\ncomputer's processor. Implementations of these traits are provided for `f32` and `f64` types.",null,null],[8,"Ulps","","A trait for floating point numbers which computes the number of representable\nvalues or ULPs (Units of Least Precision) that separate the two given values.",null,null],[16,"U","","",0,null],[10,"ulps","","The number of representable values or ULPs (Units of Least Precision) that\nseparate `self` and `other`.  The result `U` is an integral value, and will\nbe zero if `self` and `other` are exactly equal.",0,null],[8,"ApproxEqUlps","","ApproxEqUlps is a trait for approximate equality comparisons, and is defined only\nfor floating point types.",null,null],[10,"approx_eq_ulps","","This method tests for `self` and `other` values to be approximately equal\nwithin ULPs (Units of Least Precision) floating point representations.",1,null],[11,"approx_ne_ulps","","This method tests for `self` and `other` values to be not approximately\nequal within ULPs (Units of Least Precision) floating point representations.",1,null],[8,"ApproxOrdUlps","","ApproxOrdUlps is for sorting floating point values where approximate equality\nis considered equal.",null,null],[10,"approx_cmp","","This method returns an ordering between `self` and `other` values\nif one exists, where Equal is returned if they are approximately\nequal within `ulps` floating point representations.  See module\ndocumentation for an understanding of `ulps`",2,null],[11,"approx_lt","","This method tests less than (for `self` < `other`), where values\nwithin `ulps` of each other are not less than.  See module\ndocumentation for an understanding of `ulps`.",2,null],[11,"approx_le","","This method tests less than or equal to (for `self` <= `other`)\nwhere values within `ulps` are equal.  See module documentation\nfor an understanding of `ulps`.",2,null],[11,"approx_gt","","This method tests greater than (for `self` > `other`)\nwhere values within `ulps` are not greater than.  See module\ndocumentation for an understanding of `ulps`",2,null],[11,"approx_ge","","This method tests greater than or equal to (for `self` > `other`)\nwhere values within `ulps` are equal.  See module documentation\nfor an understanding of `ulps`.",2,null],[8,"ApproxEqRatio","","ApproxEqRatio is a trait for approximate equality comparisons bounding the ratio\nof the difference to the larger.",null,null],[11,"approx_eq_ratio","","This method tests if `self` and `other` are nearly equal by bounding the\ndifference between them to some number much less than the larger of the two.\nThis bound is set as the ratio of the difference to the larger.",3,{"inputs":[{"name":"approxeqratio"},{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"approx_ne_ratio","","This method tests if `self` and `other` are not nearly equal by bounding the\ndifference between them to some number much less than the larger of the two.\nThis bound is set as the ratio of the difference to the larger.",3,{"inputs":[{"name":"approxeqratio"},{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[8,"Ulps"],[8,"ApproxEqUlps"],[8,"ApproxOrdUlps"],[8,"ApproxEqRatio"]]};
initSearch(searchIndex);
